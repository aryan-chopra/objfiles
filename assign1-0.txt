
assign1-0:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8d 05 f5 00 00 00 	lea    0xf5(%rip),%rax        # 1100 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <free@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__stack_chk_fail@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <__stack_chk_fail@GLIBC_2.4>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <printf@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <printf@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__monstartup@plt>:
    1060:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4018 <__monstartup@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <malloc@plt>:
    1070:	ff 25 aa 2f 00 00    	jmp    *0x2faa(%rip)        # 4020 <malloc@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <__cxa_atexit@plt>:
    1080:	ff 25 a2 2f 00 00    	jmp    *0x2fa2(%rip)        # 4028 <__cxa_atexit@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <__isoc99_scanf@plt>:
    1090:	ff 25 9a 2f 00 00    	jmp    *0x2f9a(%rip)        # 4030 <__isoc99_scanf@GLIBC_2.7>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <strcat@plt>:
    10a0:	ff 25 92 2f 00 00    	jmp    *0x2f92(%rip)        # 4038 <strcat@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <rand@plt>:
    10b0:	ff 25 8a 2f 00 00    	jmp    *0x2f8a(%rip)        # 4040 <rand@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000010c0 <__cxa_finalize@plt>:
    10c0:	ff 25 1a 2f 00 00    	jmp    *0x2f1a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    10c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000010d0 <_start>:
    10d0:	31 ed                	xor    %ebp,%ebp
    10d2:	49 89 d1             	mov    %rdx,%r9
    10d5:	5e                   	pop    %rsi
    10d6:	48 89 e2             	mov    %rsp,%rdx
    10d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10dd:	50                   	push   %rax
    10de:	54                   	push   %rsp
    10df:	45 31 c0             	xor    %r8d,%r8d
    10e2:	31 c9                	xor    %ecx,%ecx
    10e4:	48 8d 3d 37 02 00 00 	lea    0x237(%rip),%rdi        # 1322 <main>
    10eb:	ff 15 c7 2e 00 00    	call   *0x2ec7(%rip)        # 3fb8 <__libc_start_main@GLIBC_2.34>
    10f1:	f4                   	hlt
    10f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10f9:	00 00 00 
    10fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001100 <__gmon_start__>:
    1100:	8b 05 52 2f 00 00    	mov    0x2f52(%rip),%eax        # 4058 <__TMC_END__>
    1106:	85 c0                	test   %eax,%eax
    1108:	74 06                	je     1110 <__gmon_start__+0x10>
    110a:	c3                   	ret
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1110:	48 83 ec 08          	sub    $0x8,%rsp
    1114:	48 8d 35 aa 06 00 00 	lea    0x6aa(%rip),%rsi        # 17c5 <etext>
    111b:	48 8d 3d de ee ff ff 	lea    -0x1122(%rip),%rdi        # 0 <__executable_start>
    1122:	c7 05 2c 2f 00 00 01 	movl   $0x1,0x2f2c(%rip)        # 4058 <__TMC_END__>
    1129:	00 00 00 
    112c:	e8 2f ff ff ff       	call   1060 <__monstartup@plt>
    1131:	48 8b 3d 90 2e 00 00 	mov    0x2e90(%rip),%rdi        # 3fc8 <_mcleanup@GLIBC_2.2.5>
    1138:	48 83 c4 08          	add    $0x8,%rsp
    113c:	e9 5f 06 00 00       	jmp    17a0 <atexit>
    1141:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1148:	00 00 00 
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <_dl_relocate_static_pie>:
    1150:	c3                   	ret
    1151:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1158:	00 00 00 
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <deregister_tm_clones>:
    1160:	48 8d 3d f1 2e 00 00 	lea    0x2ef1(%rip),%rdi        # 4058 <__TMC_END__>
    1167:	48 8d 05 ea 2e 00 00 	lea    0x2eea(%rip),%rax        # 4058 <__TMC_END__>
    116e:	48 39 f8             	cmp    %rdi,%rax
    1171:	74 15                	je     1188 <deregister_tm_clones+0x28>
    1173:	48 8b 05 46 2e 00 00 	mov    0x2e46(%rip),%rax        # 3fc0 <_ITM_deregisterTMCloneTable@Base>
    117a:	48 85 c0             	test   %rax,%rax
    117d:	74 09                	je     1188 <deregister_tm_clones+0x28>
    117f:	ff e0                	jmp    *%rax
    1181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1188:	c3                   	ret
    1189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001190 <register_tm_clones>:
    1190:	48 8d 3d c1 2e 00 00 	lea    0x2ec1(%rip),%rdi        # 4058 <__TMC_END__>
    1197:	48 8d 35 ba 2e 00 00 	lea    0x2eba(%rip),%rsi        # 4058 <__TMC_END__>
    119e:	48 29 fe             	sub    %rdi,%rsi
    11a1:	48 89 f0             	mov    %rsi,%rax
    11a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11a8:	48 c1 f8 03          	sar    $0x3,%rax
    11ac:	48 01 c6             	add    %rax,%rsi
    11af:	48 d1 fe             	sar    %rsi
    11b2:	74 14                	je     11c8 <register_tm_clones+0x38>
    11b4:	48 8b 05 1d 2e 00 00 	mov    0x2e1d(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    11bb:	48 85 c0             	test   %rax,%rax
    11be:	74 08                	je     11c8 <register_tm_clones+0x38>
    11c0:	ff e0                	jmp    *%rax
    11c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11c8:	c3                   	ret
    11c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011d0 <__do_global_dtors_aux>:
    11d0:	f3 0f 1e fa          	endbr64
    11d4:	80 3d 81 2e 00 00 00 	cmpb   $0x0,0x2e81(%rip)        # 405c <completed.0>
    11db:	75 2b                	jne    1208 <__do_global_dtors_aux+0x38>
    11dd:	55                   	push   %rbp
    11de:	48 83 3d fa 2d 00 00 	cmpq   $0x0,0x2dfa(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    11e5:	00 
    11e6:	48 89 e5             	mov    %rsp,%rbp
    11e9:	74 0c                	je     11f7 <__do_global_dtors_aux+0x27>
    11eb:	48 8b 3d 5e 2e 00 00 	mov    0x2e5e(%rip),%rdi        # 4050 <__dso_handle>
    11f2:	e8 c9 fe ff ff       	call   10c0 <__cxa_finalize@plt>
    11f7:	e8 64 ff ff ff       	call   1160 <deregister_tm_clones>
    11fc:	c6 05 59 2e 00 00 01 	movb   $0x1,0x2e59(%rip)        # 405c <completed.0>
    1203:	5d                   	pop    %rbp
    1204:	c3                   	ret
    1205:	0f 1f 00             	nopl   (%rax)
    1208:	c3                   	ret
    1209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001210 <frame_dummy>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	e9 77 ff ff ff       	jmp    1190 <register_tm_clones>

0000000000001219 <getNextNumber>:
    1219:	55                   	push   %rbp
    121a:	48 89 e5             	mov    %rsp,%rbp
    121d:	ff 15 ad 2d 00 00    	call   *0x2dad(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1223:	e8 88 fe ff ff       	call   10b0 <rand@plt>
    1228:	8b 0d 36 2e 00 00    	mov    0x2e36(%rip),%ecx        # 4064 <high>
    122e:	8b 15 2c 2e 00 00    	mov    0x2e2c(%rip),%edx        # 4060 <low>
    1234:	29 d1                	sub    %edx,%ecx
    1236:	83 c1 01             	add    $0x1,%ecx
    1239:	99                   	cltd
    123a:	f7 f9                	idiv   %ecx
    123c:	8b 05 1e 2e 00 00    	mov    0x2e1e(%rip),%eax        # 4060 <low>
    1242:	01 d0                	add    %edx,%eax
    1244:	5d                   	pop    %rbp
    1245:	c3                   	ret

0000000000001246 <obtainNumberBetween>:
    1246:	55                   	push   %rbp
    1247:	48 89 e5             	mov    %rsp,%rbp
    124a:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    1251:	ff 15 79 2d 00 00    	call   *0x2d79(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1257:	48 89 bd e8 fe ff ff 	mov    %rdi,-0x118(%rbp)
    125e:	89 b5 e4 fe ff ff    	mov    %esi,-0x11c(%rbp)
    1264:	89 95 e0 fe ff ff    	mov    %edx,-0x120(%rbp)
    126a:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    1271:	48 b9 50 6c 65 61 73 	movabs $0x6520657361656c50,%rcx
    1278:	65 20 65 
    127b:	48 89 08             	mov    %rcx,(%rax)
    127e:	48 be 20 65 6e 74 65 	movabs $0x207265746e6520,%rsi
    1285:	72 20 00 
    1288:	48 89 70 06          	mov    %rsi,0x6(%rax)
    128c:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    1293:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    129a:	48 89 d6             	mov    %rdx,%rsi
    129d:	48 89 c7             	mov    %rax,%rdi
    12a0:	e8 fb fd ff ff       	call   10a0 <strcat@plt>
    12a5:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
    12ab:	83 e8 01             	sub    $0x1,%eax
    12ae:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
    12b4:	eb 48                	jmp    12fe <obtainNumberBetween+0xb8>
    12b6:	8b 8d e0 fe ff ff    	mov    -0x120(%rbp),%ecx
    12bc:	8b 95 e4 fe ff ff    	mov    -0x11c(%rbp),%edx
    12c2:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    12c9:	48 89 c6             	mov    %rax,%rsi
    12cc:	48 8d 05 35 0d 00 00 	lea    0xd35(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    12d3:	48 89 c7             	mov    %rax,%rdi
    12d6:	b8 00 00 00 00       	mov    $0x0,%eax
    12db:	e8 70 fd ff ff       	call   1050 <printf@plt>
    12e0:	48 8d 85 fc fe ff ff 	lea    -0x104(%rbp),%rax
    12e7:	48 89 c6             	mov    %rax,%rsi
    12ea:	48 8d 05 23 0d 00 00 	lea    0xd23(%rip),%rax        # 2014 <_IO_stdin_used+0x14>
    12f1:	48 89 c7             	mov    %rax,%rdi
    12f4:	b8 00 00 00 00       	mov    $0x0,%eax
    12f9:	e8 92 fd ff ff       	call   1090 <__isoc99_scanf@plt>
    12fe:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    1304:	39 85 e4 fe ff ff    	cmp    %eax,-0x11c(%rbp)
    130a:	7f aa                	jg     12b6 <obtainNumberBetween+0x70>
    130c:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    1312:	39 85 e0 fe ff ff    	cmp    %eax,-0x120(%rbp)
    1318:	7c 9c                	jl     12b6 <obtainNumberBetween+0x70>
    131a:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    1320:	c9                   	leave
    1321:	c3                   	ret

0000000000001322 <main>:
    1322:	55                   	push   %rbp
    1323:	48 89 e5             	mov    %rsp,%rbp
    1326:	48 83 ec 20          	sub    $0x20,%rsp
    132a:	ff 15 a0 2c 00 00    	call   *0x2ca0(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1330:	ba ff 7f 00 00       	mov    $0x7fff,%edx
    1335:	be 00 00 00 00       	mov    $0x0,%esi
    133a:	48 8d 05 d7 0c 00 00 	lea    0xcd7(%rip),%rax        # 2018 <_IO_stdin_used+0x18>
    1341:	48 89 c7             	mov    %rax,%rdi
    1344:	e8 fd fe ff ff       	call   1246 <obtainNumberBetween>
    1349:	89 05 11 2d 00 00    	mov    %eax,0x2d11(%rip)        # 4060 <low>
    134f:	8b 05 0b 2d 00 00    	mov    0x2d0b(%rip),%eax        # 4060 <low>
    1355:	ba ff 7f 00 00       	mov    $0x7fff,%edx
    135a:	89 c6                	mov    %eax,%esi
    135c:	48 8d 05 d5 0c 00 00 	lea    0xcd5(%rip),%rax        # 2038 <_IO_stdin_used+0x38>
    1363:	48 89 c7             	mov    %rax,%rdi
    1366:	e8 db fe ff ff       	call   1246 <obtainNumberBetween>
    136b:	89 05 f3 2c 00 00    	mov    %eax,0x2cf3(%rip)        # 4064 <high>
    1371:	ba 00 00 00 40       	mov    $0x40000000,%edx
    1376:	be 00 00 00 00       	mov    $0x0,%esi
    137b:	48 8d 05 d6 0c 00 00 	lea    0xcd6(%rip),%rax        # 2058 <_IO_stdin_used+0x58>
    1382:	48 89 c7             	mov    %rax,%rdi
    1385:	e8 bc fe ff ff       	call   1246 <obtainNumberBetween>
    138a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    138d:	48 8d 05 ec 0c 00 00 	lea    0xcec(%rip),%rax        # 2080 <_IO_stdin_used+0x80>
    1394:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1398:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    139c:	ba 02 00 00 00       	mov    $0x2,%edx
    13a1:	be 00 00 00 00       	mov    $0x0,%esi
    13a6:	48 89 c7             	mov    %rax,%rdi
    13a9:	e8 98 fe ff ff       	call   1246 <obtainNumberBetween>
    13ae:	89 45 ec             	mov    %eax,-0x14(%rbp)
    13b1:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
    13b5:	74 1e                	je     13d5 <main+0xb3>
    13b7:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
    13bb:	7f 25                	jg     13e2 <main+0xc0>
    13bd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    13c1:	74 1e                	je     13e1 <main+0xbf>
    13c3:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    13c7:	75 19                	jne    13e2 <main+0xc0>
    13c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13cc:	89 c7                	mov    %eax,%edi
    13ce:	e8 92 03 00 00       	call   1765 <countWithList>
    13d3:	eb 0d                	jmp    13e2 <main+0xc0>
    13d5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13d8:	89 c7                	mov    %eax,%edi
    13da:	e8 da 01 00 00       	call   15b9 <countWithTree>
    13df:	eb 01                	jmp    13e2 <main+0xc0>
    13e1:	90                   	nop
    13e2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    13e6:	75 a5                	jne    138d <main+0x6b>
    13e8:	b8 00 00 00 00       	mov    $0x0,%eax
    13ed:	c9                   	leave
    13ee:	c3                   	ret

00000000000013ef <generateTree>:
    13ef:	55                   	push   %rbp
    13f0:	48 89 e5             	mov    %rsp,%rbp
    13f3:	48 83 ec 40          	sub    $0x40,%rsp
    13f7:	ff 15 d3 2b 00 00    	call   *0x2bd3(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    13fd:	89 7d cc             	mov    %edi,-0x34(%rbp)
    1400:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1407:	00 
    1408:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    140f:	e9 ec 00 00 00       	jmp    1500 <generateTree+0x111>
    1414:	b8 00 00 00 00       	mov    $0x0,%eax
    1419:	e8 fb fd ff ff       	call   1219 <getNextNumber>
    141e:	89 45 e0             	mov    %eax,-0x20(%rbp)
    1421:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    1428:	00 
    1429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    142d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1431:	eb 4b                	jmp    147e <generateTree+0x8f>
    1433:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1437:	8b 00                	mov    (%rax),%eax
    1439:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    143c:	75 13                	jne    1451 <generateTree+0x62>
    143e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1442:	8b 40 04             	mov    0x4(%rax),%eax
    1445:	8d 50 01             	lea    0x1(%rax),%edx
    1448:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    144c:	89 50 04             	mov    %edx,0x4(%rax)
    144f:	eb 34                	jmp    1485 <generateTree+0x96>
    1451:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1455:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1459:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    145d:	8b 00                	mov    (%rax),%eax
    145f:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    1462:	7d 0e                	jge    1472 <generateTree+0x83>
    1464:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1468:	48 8b 40 08          	mov    0x8(%rax),%rax
    146c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1470:	eb 0c                	jmp    147e <generateTree+0x8f>
    1472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1476:	48 8b 40 10          	mov    0x10(%rax),%rax
    147a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    147e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1483:	75 ae                	jne    1433 <generateTree+0x44>
    1485:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    148a:	75 70                	jne    14fc <generateTree+0x10d>
    148c:	bf 18 00 00 00       	mov    $0x18,%edi
    1491:	e8 da fb ff ff       	call   1070 <malloc@plt>
    1496:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    149a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    149e:	8b 55 e0             	mov    -0x20(%rbp),%edx
    14a1:	89 10                	mov    %edx,(%rax)
    14a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14a7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    14ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14b2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    14b9:	00 
    14ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14be:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    14c5:	00 
    14c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    14cb:	75 0a                	jne    14d7 <generateTree+0xe8>
    14cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    14d5:	eb 25                	jmp    14fc <generateTree+0x10d>
    14d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    14db:	8b 00                	mov    (%rax),%eax
    14dd:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    14e0:	7d 0e                	jge    14f0 <generateTree+0x101>
    14e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    14e6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    14ea:	48 89 50 08          	mov    %rdx,0x8(%rax)
    14ee:	eb 0c                	jmp    14fc <generateTree+0x10d>
    14f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    14f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    14f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14fc:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    1500:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1503:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    1506:	0f 8c 08 ff ff ff    	jl     1414 <generateTree+0x25>
    150c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1510:	c9                   	leave
    1511:	c3                   	ret

0000000000001512 <printTree>:
    1512:	55                   	push   %rbp
    1513:	48 89 e5             	mov    %rsp,%rbp
    1516:	48 83 ec 10          	sub    $0x10,%rsp
    151a:	ff 15 b0 2a 00 00    	call   *0x2ab0(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1524:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1529:	74 43                	je     156e <printTree+0x5c>
    152b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    152f:	48 8b 40 08          	mov    0x8(%rax),%rax
    1533:	48 89 c7             	mov    %rax,%rdi
    1536:	e8 d7 ff ff ff       	call   1512 <printTree>
    153b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    153f:	8b 50 04             	mov    0x4(%rax),%edx
    1542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1546:	8b 00                	mov    (%rax),%eax
    1548:	89 c6                	mov    %eax,%esi
    154a:	48 8d 05 8c 0b 00 00 	lea    0xb8c(%rip),%rax        # 20dd <_IO_stdin_used+0xdd>
    1551:	48 89 c7             	mov    %rax,%rdi
    1554:	b8 00 00 00 00       	mov    $0x0,%eax
    1559:	e8 f2 fa ff ff       	call   1050 <printf@plt>
    155e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1562:	48 8b 40 10          	mov    0x10(%rax),%rax
    1566:	48 89 c7             	mov    %rax,%rdi
    1569:	e8 a4 ff ff ff       	call   1512 <printTree>
    156e:	90                   	nop
    156f:	c9                   	leave
    1570:	c3                   	ret

0000000000001571 <freeTree>:
    1571:	55                   	push   %rbp
    1572:	48 89 e5             	mov    %rsp,%rbp
    1575:	48 83 ec 10          	sub    $0x10,%rsp
    1579:	ff 15 51 2a 00 00    	call   *0x2a51(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    157f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1583:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1588:	74 2c                	je     15b6 <freeTree+0x45>
    158a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    158e:	48 8b 40 08          	mov    0x8(%rax),%rax
    1592:	48 89 c7             	mov    %rax,%rdi
    1595:	e8 d7 ff ff ff       	call   1571 <freeTree>
    159a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    159e:	48 8b 40 10          	mov    0x10(%rax),%rax
    15a2:	48 89 c7             	mov    %rax,%rdi
    15a5:	e8 c7 ff ff ff       	call   1571 <freeTree>
    15aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ae:	48 89 c7             	mov    %rax,%rdi
    15b1:	e8 7a fa ff ff       	call   1030 <free@plt>
    15b6:	90                   	nop
    15b7:	c9                   	leave
    15b8:	c3                   	ret

00000000000015b9 <countWithTree>:
    15b9:	55                   	push   %rbp
    15ba:	48 89 e5             	mov    %rsp,%rbp
    15bd:	48 83 ec 20          	sub    $0x20,%rsp
    15c1:	ff 15 09 2a 00 00    	call   *0x2a09(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    15c7:	89 7d ec             	mov    %edi,-0x14(%rbp)
    15ca:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15cd:	89 c7                	mov    %eax,%edi
    15cf:	e8 1b fe ff ff       	call   13ef <generateTree>
    15d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15dc:	48 89 c7             	mov    %rax,%rdi
    15df:	e8 2e ff ff ff       	call   1512 <printTree>
    15e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15e8:	48 89 c7             	mov    %rax,%rdi
    15eb:	e8 81 ff ff ff       	call   1571 <freeTree>
    15f0:	90                   	nop
    15f1:	c9                   	leave
    15f2:	c3                   	ret

00000000000015f3 <generateList>:
    15f3:	55                   	push   %rbp
    15f4:	48 89 e5             	mov    %rsp,%rbp
    15f7:	48 83 ec 40          	sub    $0x40,%rsp
    15fb:	ff 15 cf 29 00 00    	call   *0x29cf(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1601:	89 7d cc             	mov    %edi,-0x34(%rbp)
    1604:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    160b:	00 
    160c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    1613:	e9 ae 00 00 00       	jmp    16c6 <generateList+0xd3>
    1618:	b8 00 00 00 00       	mov    $0x0,%eax
    161d:	e8 f7 fb ff ff       	call   1219 <getNextNumber>
    1622:	89 45 e0             	mov    %eax,-0x20(%rbp)
    1625:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    162c:	00 
    162d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1631:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1635:	eb 32                	jmp    1669 <generateList+0x76>
    1637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163b:	8b 00                	mov    (%rax),%eax
    163d:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    1640:	75 13                	jne    1655 <generateList+0x62>
    1642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1646:	8b 40 04             	mov    0x4(%rax),%eax
    1649:	8d 50 01             	lea    0x1(%rax),%edx
    164c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1650:	89 50 04             	mov    %edx,0x4(%rax)
    1653:	eb 1b                	jmp    1670 <generateList+0x7d>
    1655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1659:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    165d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1661:	48 8b 40 08          	mov    0x8(%rax),%rax
    1665:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1669:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    166e:	75 c7                	jne    1637 <generateList+0x44>
    1670:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    1675:	75 4b                	jne    16c2 <generateList+0xcf>
    1677:	bf 10 00 00 00       	mov    $0x10,%edi
    167c:	e8 ef f9 ff ff       	call   1070 <malloc@plt>
    1681:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1685:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1689:	8b 55 e0             	mov    -0x20(%rbp),%edx
    168c:	89 10                	mov    %edx,(%rax)
    168e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1692:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    1699:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    169d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    16a4:	00 
    16a5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    16aa:	75 0a                	jne    16b6 <generateList+0xc3>
    16ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    16b4:	eb 0c                	jmp    16c2 <generateList+0xcf>
    16b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    16ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    16be:	48 89 50 08          	mov    %rdx,0x8(%rax)
    16c2:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    16c6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    16c9:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    16cc:	0f 8c 46 ff ff ff    	jl     1618 <generateList+0x25>
    16d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16d6:	c9                   	leave
    16d7:	c3                   	ret

00000000000016d8 <printList>:
    16d8:	55                   	push   %rbp
    16d9:	48 89 e5             	mov    %rsp,%rbp
    16dc:	48 83 ec 10          	sub    $0x10,%rsp
    16e0:	ff 15 ea 28 00 00    	call   *0x28ea(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    16e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    16ea:	eb 2f                	jmp    171b <printList+0x43>
    16ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16f0:	8b 50 04             	mov    0x4(%rax),%edx
    16f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    16f7:	8b 00                	mov    (%rax),%eax
    16f9:	89 c6                	mov    %eax,%esi
    16fb:	48 8d 05 eb 09 00 00 	lea    0x9eb(%rip),%rax        # 20ed <_IO_stdin_used+0xed>
    1702:	48 89 c7             	mov    %rax,%rdi
    1705:	b8 00 00 00 00       	mov    $0x0,%eax
    170a:	e8 41 f9 ff ff       	call   1050 <printf@plt>
    170f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1713:	48 8b 40 08          	mov    0x8(%rax),%rax
    1717:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    171b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1720:	75 ca                	jne    16ec <printList+0x14>
    1722:	90                   	nop
    1723:	90                   	nop
    1724:	c9                   	leave
    1725:	c3                   	ret

0000000000001726 <freeList>:
    1726:	55                   	push   %rbp
    1727:	48 89 e5             	mov    %rsp,%rbp
    172a:	48 83 ec 20          	sub    $0x20,%rsp
    172e:	ff 15 9c 28 00 00    	call   *0x289c(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1734:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1738:	eb 20                	jmp    175a <freeList+0x34>
    173a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    173e:	48 8b 40 08          	mov    0x8(%rax),%rax
    1742:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    174a:	48 89 c7             	mov    %rax,%rdi
    174d:	e8 de f8 ff ff       	call   1030 <free@plt>
    1752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1756:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    175a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    175f:	75 d9                	jne    173a <freeList+0x14>
    1761:	90                   	nop
    1762:	90                   	nop
    1763:	c9                   	leave
    1764:	c3                   	ret

0000000000001765 <countWithList>:
    1765:	55                   	push   %rbp
    1766:	48 89 e5             	mov    %rsp,%rbp
    1769:	48 83 ec 20          	sub    $0x20,%rsp
    176d:	ff 15 5d 28 00 00    	call   *0x285d(%rip)        # 3fd0 <mcount@GLIBC_2.2.5>
    1773:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1776:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1779:	89 c7                	mov    %eax,%edi
    177b:	e8 73 fe ff ff       	call   15f3 <generateList>
    1780:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1788:	48 89 c7             	mov    %rax,%rdi
    178b:	e8 48 ff ff ff       	call   16d8 <printList>
    1790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1794:	48 89 c7             	mov    %rax,%rdi
    1797:	e8 8a ff ff ff       	call   1726 <freeList>
    179c:	90                   	nop
    179d:	c9                   	leave
    179e:	c3                   	ret
    179f:	90                   	nop

00000000000017a0 <atexit>:
    17a0:	48 8b 15 a9 28 00 00 	mov    0x28a9(%rip),%rdx        # 4050 <__dso_handle>
    17a7:	31 f6                	xor    %esi,%esi
    17a9:	e9 d2 f8 ff ff       	jmp    1080 <__cxa_atexit@plt>
    17ae:	66 90                	xchg   %ax,%ax

00000000000017b0 <__stack_chk_fail_local>:
    17b0:	48 83 ec 08          	sub    $0x8,%rsp
    17b4:	e8 87 f8 ff ff       	call   1040 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000000000017bc <_fini>:
    17bc:	48 83 ec 08          	sub    $0x8,%rsp
    17c0:	48 83 c4 08          	add    $0x8,%rsp
    17c4:	c3                   	ret
